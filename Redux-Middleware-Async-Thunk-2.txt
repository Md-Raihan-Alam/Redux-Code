/*
const fetchPosts=async()=>{
    const resposne=await fetch.get("https://jsonplaceholder.typicode.com/posts");
    return{
        type:"FETCH_POSTS",
        payload=resposne.data
    }
}
will show error beacuse of 'return plain object with type'
*/
/*
const fetchPosts=()=>{
    const resposne= fetch.get("https://jsonplaceholder.typicode.com/posts");
    return{
        type:"FETCH_POSTS",
        payload=resposne
    }
}
will show erro cause of 'data will be sent to reducer before fetch from api'
*/
import {applyMiddleware,createStore} from 'redux'
import thunk from 'redux-thunk'
const fetchPosts=()=>{
    return async(dispatch,getState)=>{
        const response=await fetch("https://jsonplaceholder.typicode.com/posts");
        console.log(response);
        dispatch((
            type:"FETCH_POSTS",
            payload:response.data
        ))
    }
}
const posts=()=>{
    const dispatch=useDispatch();
    const posts=useSelector((state)=>state);
    React.useEffect(()=>{
        dispatch(fetchPosts())
    },[])
    return <div>
        {posts.map((el)=>{
            return <h3>{el.title}</h3>;
        })}
    </div>
}
const initState=[]
const postsReducer=(state=initState,action){
    switch(action.type){
        case 'FETCH_POSTS':
            return action.payload;
        default:
            return state;
    }
};
const store=Redux.createStore(postsReducer,applyMiddleware(thunk))  